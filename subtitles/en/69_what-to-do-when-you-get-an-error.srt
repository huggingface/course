1
00:00:05,440 --> 00:00:13,760
In this video, we will learn the first things 
to do when you get an error. Let's say we want  

2
00:00:13,760 --> 00:00:18,320
to use the question answering pipeline on 
a particular model and we get the following  

3
00:00:18,320 --> 00:00:24,160
error. Errors in Python can appear overwhelming 
because you get so much information printed out,  

4
00:00:24,160 --> 00:00:28,160
but that's because Python is trying to help 
you the best it can to solve your problem.  

5
00:00:28,880 --> 00:00:32,000
In this video we will see how to 
interpret the error report we get.  

6
00:00:33,280 --> 00:00:37,920
The first thing to notice at the very top is 
that Python shows you with a clear arrow the  

7
00:00:37,920 --> 00:00:42,400
line of code that triggered the error. So you 
don't have to fiddle with your code and remove  

8
00:00:42,400 --> 00:00:47,520
random lines to figure out where the error comes 
from, you have the answer in front right here.  

9
00:00:48,880 --> 00:00:53,280
The arrows you see below are the parts of the 
code Python tried to execute while running the  

10
00:00:53,280 --> 00:00:59,600
instruction: here we are inside the pipeline 
function and the error came on this line while  

11
00:00:59,600 --> 00:01:04,800
trying to execute the function check_tasks, 
which then raised the KeyError we see displayed.  

12
00:01:06,480 --> 00:01:11,600
Note that Python tells you exactly where the 
functions it's executing live, so if you feel  

13
00:01:11,600 --> 00:01:17,680
adventurous, you can even go inspect the source 
code. This whole thing is called the traceback.  

14
00:01:19,840 --> 00:01:23,600
If you are running your code on Colab, 
the Traceback is automatically minimized,  

15
00:01:23,600 --> 00:01:29,920
so you have to click to expand it. At the very 
end of the traceback, you finally get the actual  

16
00:01:29,920 --> 00:01:34,960
error message. The first thing you should do 
when encountering an error is to read that  

17
00:01:34,960 --> 00:01:40,640
error message. Here it's telling us it doesn't 
know the question answering task, and helpfully  

18
00:01:40,640 --> 00:01:46,560
gives us the list of supported tasks... in 
which we can see that question answering is.  

19
00:01:47,280 --> 00:01:51,680
Looking more closely though, we used 
an underscore to separate the two words  

20
00:01:51,680 --> 00:01:55,040
when the task is written with 
a minus, so we should fix that!  

21
00:01:57,280 --> 00:02:02,160
Now let's retry our code with the task properly 
written and what is happening today? Another  

22
00:02:02,160 --> 00:02:08,000
error! As we saw before, we go look at the bottom 
to read the actual error message. It's telling us  

23
00:02:08,000 --> 00:02:13,600
that we should check our model is a correct model 
identifier, so let's hop on to hf.co/models.  

24
00:02:14,480 --> 00:02:18,320
We can see our model listed there in the 
ones available for question answering.  

25
00:02:19,120 --> 00:02:22,480
The difference is that it's 
spelled distilbert with one l,  

26
00:02:22,480 --> 00:02:28,960
and we used two. So let's fix that. We finally 
get our results! If your error is more complex,  

27
00:02:28,960 --> 00:02:35,840
you might need to use the Python debugger, 
check out the videos linked below to learn how!
